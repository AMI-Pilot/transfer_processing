#!/usr/bin/env python3
"Get information about packages"
import _preamble
import argparse
from ami import Ami
from ami.package_factory import PackageFactory
import logging
from pathlib import Path
import textwrap
import yaml

logger = logging.getLogger()

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--state", default=False, action="store_true", help="args are state names")
    parser.add_argument("id", nargs="+", help="Package ID/states to modify")
    args = parser.parse_args()

    ami = Ami()
    pf = PackageFactory(ami)

    for i in args.id:
        try:
            if args.state:
                packages = pf.packages_by_state(i)
            else:
                packages = [pf.get_package(i)]
        except ValueError as e:
            print(f"Cannot resolve {i}: {e}")
            continue

        for p in packages:
            print(f"Package {p.get_id()} / {p.get_timestamp()}\n======================")
            print(f"  Schema Version: {p.data['version']}, State: {p.data['state']}")
            print(f"  Local Locations: {[f'{x}/{p.get_dirname()}' for x in ['workspace', 'deleted', 'finished'] if Path(ami.get_directory(x), p.get_dirname()).exists()]}")

            print("  Application data:")
            print(textwrap.indent(yaml.dump(p.data.get('app_info', {})), "    "))
            print("  Logs:")
            for l in p.data['log']:
                print(f"    {l['time']}  {l['severity']:8s}  {l['message']}")



if __name__ == "__main__":
    main()