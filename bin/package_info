#!/usr/bin/env python3
"Get information about packages"
import _preamble
import argparse
from ami import Ami
from ami.package_factory import PackageFactory
import logging
from pathlib import Path
import textwrap
import yaml

logger = logging.getLogger()
ami = Ami()

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--debug", default=False, action="store_true", help="Turn on debugging")
    parser.add_argument("id", nargs="+", help="Package spec to query")
    parser.add_argument("--raw", default=False, action="store_true", help="Just dump the raw data")
    args = parser.parse_args()
    if not args.debug:
        logger.setLevel(logging.INFO)

    pf = PackageFactory(ami)
    packages = pf.find_packages(*args.id)    
    if args.raw:
        data = {}
        for p in packages:                
            data[p.get_id() + "/" + p.get_timestamp()] = p.data
            p.data['_id'] = str(p.data['_id'])
        print(yaml.safe_dump(data))
    else:
        for p in packages:        
            print(f"Package {p.get_id()} / {p.get_timestamp()}\n======================")
            print(f"  State: {p.get_state()}")
            print(f"  SDA Location: {p.get_sda_location()}")
            print(f"  Local Locations: {[f'{x}/{p.get_dirname()}' for x in ['workspace', 'deleted', 'finished'] if Path(ami.get_directory(x), p.get_dirname()).exists()]}")

            print("  Application data:")
            print(textwrap.indent(yaml.dump(p.data.get('app_info', {})), "    "))
            print("  Logs:")
            for l in p.data['log']:
                print(f"    {l['time']}  {l['severity']:8s}  {l['message']}")



if __name__ == "__main__":
    main()