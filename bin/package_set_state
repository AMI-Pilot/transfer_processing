#!/usr/bin/env python3
"Change the state of a non-deleted, non-finished package"
import _preamble
import argparse
from ami import Ami
from ami.package_factory import PackageFactory
import logging
from pathlib import Path
import getpass

logger = logging.getLogger()
ami = Ami()

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--debug", default=False, action="store_true", help="Turn on debugging")
    parser.add_argument("--force", default=False, action="store_true", help="force the state change")
    parser.add_argument("newstate", help="New state")
    parser.add_argument("id", nargs="+", help="Package spec to modify")
    args = parser.parse_args()
    
    if not args.debug:
        logger.setLevel(logging.INFO)

    pf = PackageFactory(ami)
    workspace = ami.get_directory('workspace')
    packages = pf.find_packages(*args.id)
    for p in packages:
        try:
            if not (workspace / p.get_dirname()).exists():
                logger.warning(f"Skipping {p.get_id()} since it doesn't have a copy in the working directory")
            else:
                p.log("info", f"State manually changed by {getpass.getuser()}")
                p.set_state(args.newstate, False if args.force else True)
        except ValueError as e:
            print(f"Cannot set state for {p.get_id()}: {e}")
            continue


if __name__ == "__main__":
    main()