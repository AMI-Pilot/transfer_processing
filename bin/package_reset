#!/usr/bin/env python3
"For debugging reset the object to the accepted state and clear the log"
import _preamble
import argparse
from ami import Ami
from ami.package_factory import PackageFactory
import logging
from pathlib import Path

logger = logging.getLogger()

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--state", default=False, action="store_true", help="args are state names")
    parser.add_argument("--doit", default=False, action="store_true", help="Really do the action")    
    parser.add_argument("id", nargs="+", help="Package ID/states to modify")
    args = parser.parse_args()

    ami = Ami()
    pf = PackageFactory(ami)

    workspace = ami.get_directory('workspace')
    for i in args.id:
        try:
            if args.state:
                packages = pf.packages_by_state(i)
            else:
                packages = [pf.get_package(i)]
        except ValueError as e:
            print(f"Cannot resolve {i}: {e}")
            continue

        for p in packages:
            try:
                if not (workspace / p.get_dirname()).exists():
                    logger.warning(f"Skipping {p.get_id()} since it doesn't have a copy in the working directory")
                else:
                    if args.doit:
                        p.reset()
                    else:
                        logger.info(f"Skipping {p.get_id()} because the --doit flag wasn't set")
                    
            except ValueError as e:
                print(f"Cannot set state for {p.get_id()}: {e}")
                continue


if __name__ == "__main__":
    main()